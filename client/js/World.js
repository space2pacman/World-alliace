var map = {
	size: {
		width: 20,
		height: 20
	},
	surfaces: [
		[113,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,114],
		[127,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,125],
		[127,116,105,107,110,111,112,116,116,116,116,116,116,116,116,116,116,116,116,125],
		[127,116,120,122,125,126,127,116,116,116,116,116,116,116,116,116,116,116,116,125],
		[127,116,120,122,138,139,140,116,116,116,116,116,116,116,116,116,116,116,116,125],
		[127,116,120,122,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,125],
		[127,116,120,122,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,125],
		[127,116,135,137,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,125],
		[127,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,125],
		[127,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,125],
		[127,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,125],
		[127,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,125],
		[127,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,125],
		[127,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,125],
		[127,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,125],
		[127,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,125],
		[127,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,125],
		[127,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,125],
		[127,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,125],
		[128,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,129]
	],
	trees: [
		[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200],
		[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200],
		[200,200,200,200,200,200,200,201,203,212,208,200,200,200,200,200,200,200,200,200],
		[200,200,200,200,200,200,200,200,213,218,217,200,200,200,200,200,200,200,200,200],
		[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200],
		[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200],
		[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200],
		[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200],
		[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200],
		[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200],
		[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200],
		[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200],
		[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200],
		[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200],
		[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200],
		[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200],
		[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200],
		[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200],
		[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200],
		[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200]
	],
	buildings: [
		[300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300],
		[300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300],
		[300,300,300,300,300,300,300,300,300,300,208,300,300,300,300,300,300,300,300,300],
		[300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300],
		[300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300],
		[300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300],
		[300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300],
		[300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300],
		[300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300],
		[300,300,300,300,300,300,306,306,300,300,300,300,300,300,300,300,300,300,300,300],
		[300,300,300,300,300,300,308,309,300,300,300,300,300,300,300,300,300,300,300,300],
		[300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300],
		[300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300],
		[300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300],
		[300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300],
		[300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300],
		[300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300],
		[300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300],
		[300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300],
		[300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300]
	],
	roofs: [
		[400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400],
		[400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400],
		[400,400,400,400,400,400,400,400,400,400,208,400,400,400,400,400,400,400,400,400],
		[400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400],
		[400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400],
		[400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400],
		[400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400],
		[400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400],
		[400,400,400,400,400,400,410,411,400,400,400,400,400,400,400,400,400,400,400,400],
		[400,400,400,400,400,400,405,406,400,400,400,400,400,400,400,400,400,400,400,400],
		[400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400],
		[400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400],
		[400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400],
		[400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400],
		[400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400],
		[400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400],
		[400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400],
		[400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400],
		[400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400],
		[400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400]
	],
	misc: [
		[500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500],
		[500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500],
		[500,500,500,500,500,500,500,500,500,500,208,500,500,500,500,500,500,500,500,500],
		[500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500],
		[500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500],
		[500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500],
		[500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500],
		[500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500],
		[500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500],
		[500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500],
		[500,500,500,500,500,537,538,510,500,500,500,500,500,500,500,500,500,500,500,500],
		[500,500,500,500,500,535,521,549,535,521,500,500,500,500,500,500,500,500,500,500],
		[500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500],
		[500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500],
		[500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500],
		[500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500],
		[500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500],
		[500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500],
		[500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500],
		[500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500]
	],
};

var collisions = [
	[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
	[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
	[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
	[100,100,101,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
	[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
	[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
	[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
	[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
	[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
	[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
	[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
	[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
	[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
	[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
	[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
	[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
	[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
	[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
	[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100],
	[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100]
]

class World {
	constructor(element, width, height, cellWidth, cellHeight) {
		this.width = width;
		this.height = height;
		this._element = document.querySelector(element);
		this._objects = [];
		this._map = null;
		this._cellWidth = cellWidth;
		this._cellHeight = cellHeight;
		this._createMap();
		this._fillMap();
		this._init();
	}

	on(event, handler) {
		this._map.addEventListener(event, handler);
	}

	addPlayer(player) {
		this._objects.push(player);
	}

	placeObjects(login) {
		for(var i = 0; i < this._objects.length; i++) {
			if(this._objects[i].getAttribute("login") === login) {
				this._element.appendChild(this._objects[i]);
			} else {
				this._map.appendChild(this._objects[i])
			}

		}
	}

	exists(value) {
		var values = [];

		for(var i = 0; i < this._objects.length; i++) {
			values.push(this._objects[i].getAttribute("login"));
		}

		return values.includes(value);
	}

	checkCollision(x1, y1, x2, y2) {
		var path = this._getPath(x1, y1, x2, y2);
		var coordinates = {
			x: x2,
			y: y2
		}

		for(var i = 0; i < path.length; i++) {
			var x = path[i].index.x;
			var y = path[i].index.y;

			if(collisions[y][x] === 101) {
				if(x1 < x*50) {
					coordinates.x = path[i].coordinates.x - 25;
				} else { 
					coordinates.x = path[i].coordinates.x + 25;
				}
				if(y1 < y*50) {
					coordinates.y = path[i].coordinates.y - 25;
				} else {
					coordinates.y = path[i].coordinates.y + 25;
				}

				if(coordinates.x - 1 === x1) {
					coordinates.x = coordinates.x - 1;
				}
				if(coordinates.x + 1 === x1) {
					coordinates.x = coordinates.x + 1;
				}
				if(coordinates.y - 1 === y1) {
					coordinates.y = coordinates.y - 1;
				}
				if(coordinates.y + 1 === y1) {
					coordinates.y = coordinates.y + 1;
				}
			}
			

		}
//console.log(coordinates)
		return coordinates;
	}

	_getPath(x1, y1, x2, y2) {
		var path = [];
		//this._drawPath(x1, y1, x2, y2, handler.bind(this));
		this._drawPath(x1+25, y1-25, x2+25, y2-25, handler.bind(this));
		this._drawPath(x1+25, y1+25, x2+25, y2+25, handler.bind(this));
		this._drawPath(x1-25, y1-25, x2-25, y2-25, handler.bind(this));
		this._drawPath(x1-25, y1+25, x2-25, y2+25, handler.bind(this));

		//
		var collisionEl = document.querySelector(".collisions");
		//

		function handler(x, y) {
			var cell = this._getCellIndex(x, y);
			var included = false;

			for(var i = 0; i < path.length; i++) {
				if(path[i].index.x === cell.index.x && path[i].index.y === cell.index.y) {
					included = true;
				}
			}

			if(!included && cell.index.x >= 0 && cell.index.y >= 0) {
				cell.coordinates = {
					x: x,
					y: y
				};
				path.push(cell);
			}
		}
		//
		for(var j = 0; j < collisionEl.children.length; j++) {
			collisionEl.children[j].style.background = "none";
		}

		for(var i = 0; i < path.length; i++) {
			var x = path[i].index.x;
			var y = path[i].index.y;

			if(collisionEl.children[y * map.size.width + x]) {	
				collisionEl.children[y * map.size.width + x].style.background = "red";
			}

		}
		//

		return path;
	}

	_drawPath(x1, y1, x2, y2, callback) {
		var deltaX = Math.abs(x2 - x1);
		var deltaY = Math.abs(y2 - y1);
		var signX = x1 < x2 ? 1 : -1;
		var signY = y1 < y2 ? 1 : -1;
		var error = deltaX - deltaY;

		while(x1 != x2 || y1 != y2) {
			var error2 = error * 2;

			if(error2 > -deltaY) {
				error -= deltaY;
				x1 += signX;
			}

			if(error2 < deltaX) {
				error += deltaX;
				y1 += signY;
			}

			callback(x1, y1);
		}
	}
	

	_getCellIndex(x, y) {
		return { 
			index: { 
				x: Math.floor(x / 50), 
				y: Math.floor(y / 50) 
			}
		};
	}

	_moveMap(e) {
		var x = e.detail.x;
		var y = e.detail.y;
			
		this._map.style.left = -(x - this.width / 2) + "px";
		this._map.style.top = -(y - this.height / 2) + "px";
	}

	_createMap() {
		this._map = document.createElement("div");
		this._map.classList.add("map");
		this._map.style.width = map.size.width * this._cellWidth + "px";
		this._map.style.height = map.size.height * this._cellHeight + "px";
		this._element.appendChild(this._map);
		window.addEventListener("moveMap", this._moveMap.bind(this));
	}

	_createCell() {
		var cell = document.createElement("div");

		cell.classList.add("cell");

		return cell;
	}

	_createField(type) {
		var field = document.createElement("div");
		
		field.classList.add(type);

		return field;
	}

	_fillMap() {
		for(var type in map) {
			if(type === "size") continue;

			var field = this._createField(type);

			for(var i = 0; i < map[type].length; i++) {
				for(var j = 0; j < map[type][i].length; j++) {
					var cell = this._createCell();

					if(map[type][i][j] >= 100 && map[type][i][j] <= 199) {
						cell.classList.add(`surface-${map[type][i][j]}`);
					}

					if(map[type][i][j] >= 200 && map[type][i][j] <= 299) {
						cell.classList.add(`tree-${map[type][i][j]}`);
					}

					if(map[type][i][j] >= 300 && map[type][i][j] <= 399) {
						cell.classList.add(`building-${map[type][i][j]}`);
					}

					if(map[type][i][j] >= 400 && map[type][i][j] <= 499) {
						cell.classList.add(`roof-${map[type][i][j]}`);
					}

					if(map[type][i][j] >= 500 && map[type][i][j] <= 599) {
						cell.classList.add(`misc-${map[type][i][j]}`);
					}

					field.appendChild(cell);	
				}

			}
			
			this._map.appendChild(field);

		}
			// for test
			var field = this._createField("collisions");

			for(var i = 0; i < collisions.length; i++) {
				for(var j = 0; j < collisions[i].length; j++) {
					var cell = this._createCell();

					cell.classList.add(`collision-${collisions[i][j]}`);
					field.appendChild(cell);
				}
			}

			this._map.appendChild(field)
			//
	}

	_init() {
		this._element.style.width = this.width + "px";
		this._element.style.height = this.height + "px";
	}

}